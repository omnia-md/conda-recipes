jobs:
- job: linux
  pool:
    vmImage: ubuntu-16.04
  timeoutInMinutes: 360
  strategy:
    maxParallel: 8
    matrix:
      # linux_python3.6:
      #   CONFIG: python3.6
      #   DOCKER_IMAGE: condaforge/linux-anvil-comp7
      #   EXCLUDE_JINJA: CUDA_STR
      linux_python3.7:
        CONFIG: python3.7
        DOCKER_IMAGE: condaforge/linux-anvil-comp7
        EXCLUDE_JINJA: CUDA_STR
      # linux_python3.8:
      #   CONFIG: python3.8
      #   DOCKER_IMAGE: condaforge/linux-anvil-comp7
      #   EXCLUDE_JINJA: CUDA_STR

      # linux_python3.6_cuda8.0:
      #   CONFIG: python3.6_cuda8.0
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:8.0"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.6_cuda9.0:
      #   CONFIG: python3.6_cuda9.0
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:9.0"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.6_cuda9.1:
      #   CONFIG: python3.6_cuda9.1
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:9.1"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.6_cuda9.2:
      #   CONFIG: python3.6_cuda9.2
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:9.2"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.6_cuda10.0:
      #   CONFIG: python3.6_cuda10.0
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:10.0"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.6_cuda10.1:
      #   CONFIG: python3.6_cuda10.1
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:10.1"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.6_cuda10.2:
      #   CONFIG: python3.6_cuda10.2
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:10.2"
      #   INCLUDE_JINJA: CUDA_STR

      # linux_python3.7_cuda8.0:
      #   CONFIG: python3.7_cuda8.0
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:8.0"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.7_cuda9.0:
      #   CONFIG: python3.7_cuda9.0
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:9.0"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.7_cuda9.1:
      #   CONFIG: python3.7_cuda9.1
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:9.1"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.7_cuda9.2:
      #   CONFIG: python3.7_cuda9.2
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:9.2"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.7_cuda10.0:
      #   CONFIG: python3.7_cuda10.0
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:10.0"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.7_cuda10.1:
      #   CONFIG: python3.7_cuda10.1
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:10.1"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.7_cuda10.2:
      #   CONFIG: python3.7_cuda10.2
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:10.2"
      #   INCLUDE_JINJA: CUDA_STR

      # linux_python3.8_cuda8.0:
      #   CONFIG: python3.8_cuda8.0
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:8.0"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.8_cuda9.0:
      #   CONFIG: python3.8_cuda9.0
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:9.0"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.8_cuda9.1:
      #   CONFIG: python3.8_cuda9.1
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:9.1"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.8_cuda9.2:
      #   CONFIG: python3.8_cuda9.2
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:9.2"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.8_cuda10.0:
      #   CONFIG: python3.8_cuda10.0
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:10.0"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.8_cuda10.1:
      #   CONFIG: python3.8_cuda10.1
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:10.1"
      #   INCLUDE_JINJA: CUDA_STR
      # linux_python3.8_cuda10.2:
      #   CONFIG: python3.8_cuda10.2
      #   DOCKER_IMAGE: "omniamd/linux-anvil-cuda:10.2"
      #   INCLUDE_JINJA: CUDA_STR

  steps:
    - script: |
        echo "##vso[task.setvariable variable=NIGHTLY]true"
      condition: eq(variables['Build.Reason'], 'Schedule')
      displayName: Set dev trigger if scheduled

    - script: |
        CBA_FLAGS="-vvv --cycle-packages"
        if [ -n "$INCLUDE_JINJA" ]; then
          CBA_FLAGS="$CBA_FLAGS --build-only-jinja $INCLUDE_JINJA"
        fi
        if [ -n "$EXCLUDE_JINJA" ]; then
          CBA_FLAGS="$CBA_FLAGS --no-build-jinja $EXCLUDE_JINJA"
        fi
        if [ ! -z "$NIGHTLY" ]; then
          CBA_FLAGS="$CBA_FLAGS --scheduled-only"
        fi
        echo "##vso[task.setvariable variable=CBA_FLAGS]$CBA_FLAGS"
      displayName: Assemble Variables

    - script: |
        DOCKER_FLAGS="--rm"
        DOCKER_DIRS="-v `pwd`:/io"
        DOCKER_DIRS="$DOCKER_DIRS -v `pwd`/.conda_configs:/conda_configs"
        DOCKER_VARS="-e CBA_FLAGS -e CONFIG -e BINSTAR_TOKEN -e NIGHTLY"
        DOCKER_COMMAND="bash /io/devtools/docker-build.sh"
        docker run ${DOCKER_FLAGS} ${DOCKER_DIRS} ${DOCKER_VARS} ${DOCKER_IMAGE} ${DOCKER_COMMAND}
      displayName: Run Docker Build
      env:
        BINSTAR_TOKEN: $(BINSTAR_TOKEN)

